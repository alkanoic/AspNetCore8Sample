using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
__UsingNamespaces__

namespace __NamespaceName__;

/// <summary>
/// This code is automatically generated by CodeGen Api command
/// </summary>
public class __ControllerName__ : Controller
{
    private readonly __ContextTypeName__ _context;

    public __ControllerName__(__ContextTypeName__ context)
    {
        _context = context;
    }

    // GET: __ModelTypeName__
    public async ValueTask<IActionResult> Index()
    {
        return View(await _context.__EntitySetName__.ToListAsync());
    }

    // GET: __ModelTypeName__/Details/5
    public async ValueTask<IActionResult> Details(__PrimaryKeyArguments__)
    {
        __ContextFindPrimaryKey__
        if (result == null)
        {
            return NotFound();
        }

        return View(result);
    }

    // GET: __ModelTypeName__/Create
    public IActionResult Create()
    {
        return View();
    }

    // POST: __ModelTypeName__/Create
    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
    [HttpPost]
    [ValidateAntiForgeryToken]
    public async ValueTask<IActionResult> Create([Bind("__CreateBindAttributes__")] __ModelTypeName__ target)
    {
        if (ModelState.IsValid)
        {
            _context.Add(target);
            await _context.SaveChangesAsync();
            return RedirectToAction(nameof(Index));
        }
        return View(target);
    }

    // GET: __ModelTypeName__/Edit/5
    public async ValueTask<IActionResult> Edit(__PrimaryKeyArguments__)
    {
        __ContextFindPrimaryKey__
        if (result == null)
        {
            return NotFound();
        }
        return View(result);
    }

    // POST: __ModelTypeName__/Edit/5
    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
    [HttpPost]
    [ValidateAntiForgeryToken]
    public async ValueTask<IActionResult> Edit(__PrimaryKeyArguments__, [Bind("__CreateBindAttributes__")] __ModelTypeName__ target)
    {
        if (__CompareTargetToArguments__)
        {
            return NotFound();
        }

        if (ModelState.IsValid)
        {
            try
            {
                _context.Update(target);
                await _context.SaveChangesAsync();
            }
            catch (DbUpdateConcurrencyException)
            {
                if (!Exists(__PrimaryKeyNameArguments__))
                {
                    return NotFound();
                }
                else
                {
                    throw;
                }
            }
            return RedirectToAction(nameof(Index));
        }
        return View(target);
    }

    // GET: __ModelTypeName__/Delete/5
    public async ValueTask<IActionResult> Delete(__PrimaryKeyArguments__)
    {
        __ContextFindPrimaryKey__
        if (result == null)
        {
            return NotFound();
        }

        return View(result);
    }

    // POST: __ModelTypeName__/Delete/5
    [HttpPost, ActionName("Delete")]
    [ValidateAntiForgeryToken]
    public async ValueTask<IActionResult> DeleteConfirmed(__PrimaryKeyArguments__)
    {
        __ContextFindPrimaryKey__
        if (result != null)
        {
            _context.__EntitySetName__.Remove(result);
        }

        await _context.SaveChangesAsync();
        return RedirectToAction(nameof(Index));
    }

    private bool Exists(__PrimaryKeyArguments__)
    {
        __EntitySetExist__
    }
}
