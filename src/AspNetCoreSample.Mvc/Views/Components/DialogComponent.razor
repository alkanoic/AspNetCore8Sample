@page "/dialogcomponent"
@inject HttpClient Http
@inject IOptions<WebApiOption> _webApiOption
@using System.Net.Http.Headers
@using System.Text.Json
@using System.Linq
@using AspNetCoreSample.Mvc.Options
@using Microsoft.Extensions.Options

<h3>Hello from DialogComponent</h3>

<input type="text" />
<button @onclick="UpdateData">dialog</button>

<table>
    <thead>
        <tr>
            <th>Date</th>
            <th>Summary</th>
            <th>Temperature</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var d in data ?? new List<WeatherForecast>())
        {
            <tr>
                <td>@d.Date</td>
                <td>@d.Summary</td>
                <td>@d.TemperatureC</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private IEnumerable<WeatherForecast>? data;

    private void UpdateData()
    {
        var handler = new HttpClientHandler
            {
                ServerCertificateCustomValidationCallback = (request, cert, chain, errors) =>
                {
                    Console.WriteLine("SSL error skipped");
                    return true;
                }
            };
        HttpClient client = new HttpClient(handler);
        client.BaseAddress = new Uri($"{_webApiOption.Value.WebApiBaseUrl}/api/");
        client.DefaultRequestHeaders.Accept.Clear();
        client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
        HttpResponseMessage response = client.GetAsync("WeatherForecast").Result;
        string jsonString = response.Content.ReadAsStringAsync().Result;
        var options = new JsonSerializerOptions
            {
                PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            };
        var d = JsonSerializer.Deserialize<WeatherForecast[]>(jsonString, options);
        if (d is not null)
            data = d;
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }
    }
}
