/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/Simple": {
    get: operations["Simple"];
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["SimpleInput"];
          "text/json": components["schemas"]["SimpleInput"];
          "application/*+json": components["schemas"]["SimpleInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SimpleOutput"];
            "application/json": components["schemas"]["SimpleOutput"];
            "text/json": components["schemas"]["SimpleOutput"];
          };
        };
      };
    };
  };
  "/WeatherForecast": {
    get: operations["GetWeatherForecast"];
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["WeatherForecast"];
          "text/json": components["schemas"]["WeatherForecast"];
          "application/*+json": components["schemas"]["WeatherForecast"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["WeatherForecast"];
            "application/json": components["schemas"]["WeatherForecast"];
            "text/json": components["schemas"]["WeatherForecast"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    SimpleInput: {
      input?: string | null;
    };
    SimpleOutput: {
      output?: string | null;
    };
    WeatherForecast: {
      /** Format: date-time */
      date?: string;
      /** Format: int32 */
      temperatureC?: number;
      /** Format: int32 */
      temperatureF?: number;
      summary?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  Simple: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SimpleInput"];
        "text/json": components["schemas"]["SimpleInput"];
        "application/*+json": components["schemas"]["SimpleInput"];
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "text/plain": components["schemas"]["SimpleOutput"];
          "application/json": components["schemas"]["SimpleOutput"];
          "text/json": components["schemas"]["SimpleOutput"];
        };
      };
    };
  };
  GetWeatherForecast: {
    responses: {
      /** @description Success */
      200: {
        content: {
          "text/plain": components["schemas"]["WeatherForecast"][];
          "application/json": components["schemas"]["WeatherForecast"][];
          "text/json": components["schemas"]["WeatherForecast"][];
        };
      };
    };
  };
}
