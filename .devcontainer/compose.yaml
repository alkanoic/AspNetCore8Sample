services:
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      TZ: 'Asia/Tokyo'
    volumes:
      - ../..:/workspaces:cached
      - $USERPROFILE/.aspnet/https:/workspaces/.aspnet/https
    network_mode: service:mysql
    command: sleep infinity
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: sample
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./docker/volumes/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/volumes/mysql/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    hostname: keycloak
    tty: true
    stdin_open: true
    ports:
      - "8080:8080"
    restart: always
    environment:
      KC_DB: mysql
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_URL: jdbc:mysql://keycloak-mysql:3306/keycloak
      KEYCLOAK_ADMIN: admin # 管理ユーザーIDを設定
      KEYCLOAK_ADMIN_PASSWORD: passwd # 管理ユーザーのパスワードを設定
      # KC_HOSTNAME: localhost:8080
      # KC_HTTPS_KEY_STORE_FILE:
      # KC_HTTPS_KEY_STORE_PASSWORD:
    volumes:
      - ./docker/volumes/keycloak/data/import:/opt/keycloak/data/import
    command:
      [
        start-dev, # 開発モードで起動 # start --optimized
        --import-realm
      ]
    depends_on:
      - keycloak-mysql
      - mailpit
  keycloak-mysql:
    image: mysql:latest
    container_name: keycloak-mysql
    hostname: keycloak-mysql
    ports:
      - "33060:3306"
    expose:
      - 3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    hostname: mailpit
    ports:
      - 8025:8025
    expose:
      - 1025
    environment:
      - TZ=Asia/Tokyo
  garnet:
    image: 'ghcr.io/microsoft/garnet'
    container_name: garnet
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
  # mssql:
  #   build: ./docker/mssql/
  #   container_name: mssql
  #   environment:
  #     SA_PASSWORD: "mssql_PASS1"
  #     ACCEPT_EULA: "Y"
  #     MSSQL_PID: "Express"
  #     MSSQL_LCID: 1041
  #     MSSQL_COLLATION: "Japanese_CI_AS"
  #     TZ: "Asia/Tokyo"
  #   volumes:
  #     # - ./docker/volumes/mssql/data:/var/opt/mssql/data
  #     # - ./docker/volumes/mssql/log:/var/opt/mssql/log
  #     # - ./docker/volumes/mssql/secrets:/var/opt/mssql/secrets
  #     - ./docker/volumes/mssql/initdb.d:/entrypoint-initdb.d
  #   ports:
  #     - 1433:1433

  # postgresql:
  #   image: postgres:latest
  #   container_name: postgresql
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./docker/volumes/postgresql/initdb.d:/docker-entrypoint-initdb.d
  #     # - ./docker/volumes/postgresql/data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: sample
  #     POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
  #     TZ: 'Asia/Tokyo'
  #   restart: always
  # pgadmin4:
  #   image: dpage/pgadmin4:latest
  #   container_name: pgadmin4
  #   ports:
  #     - 8090:80
  #   volumes:
  #     - ./docker/volumes/pgadmin4/servers.json:/pgadmin4/servers.json
  #     # - ./docker/volumes/pgadmin4/pgadmin:/var/lib/pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: root@pgadmin.com
  #     PGADMIN_DEFAULT_PASSWORD: postgres
  #     TZ: 'Asia/Tokyo'
  #   restart: always
  #   depends_on:
  #     - postgresql
